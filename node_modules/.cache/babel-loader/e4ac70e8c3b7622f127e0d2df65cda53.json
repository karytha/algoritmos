{"ast":null,"code":"var _jsxFileName = \"/Users/karytha/Projetos/Karytha/IA/algoritmos/src/ColoniaDeFormigas/index.js\";\nimport React, { useState } from \"react\"; // import { P, O, B, MI, M, Feromonios } from \"../Components/dados\";\n\nexport const P = [[0, 0.22155, 0.3943, 0.5695, 0.45945, 0.524, 0.519, 0.5575, 0.636, 0.659, 0.6725, 0.7235, 0.713, 0.644, 0.8883, 0.265], [0.22155, 0, 0.17845, 0.3541, 0.2383, 0.30335, 0.30385, 0.33905, 0.42045, 0.4425, 0.4552, 0.509, 0.502, 0.43375, 0.681, 0.07745], [0.3943, 0.17845, 0, 0.17595, 0.07965, 0.13395, 0.1963, 0.2102, 0.29605, 0.3127, 0.32075, 0.38225, 0.38565, 0.32445, 0.65, 0.18595], [0.5695, 0.3541, 0.17595, 0, 0.37845, 0.07485, 0.14935, 0.17825, 0.235, 0.23785, 0.23565, 0.2976, 0.31615, 0.279, 0.4753, 0.35035], [0.45945, 0.2383, 0.07965, 0.37845, 0, 0.2221, 0.12655, 0.13235, 0.21745, 0.2323, 0.24115, 0.3029, 0.3074, 0.3221, 0.48595, 0.2221], [0.524, 0.30335, 0.13395, 0.07485, 0.2221, 0, 0.1361, 0.1173, 0.1907, 0.20065, 0.20395, 0.2677, 0.279, 0.2299, 0.4511, 0.28805], [0.519, 0.30385, 0.1963, 0.14935, 0.12655, 0.1361, 0, 0.048045, 0.117, 0.4101, 0.1545, 0.20525, 0.19945, 0.1328, 0.34435, 0.25555], [0.5575, 0.33905, 0.2102, 0.17825, 0.13235, 0.1173, 0.048045, 0, 0.08615, 0.1164, 0.0638, 0.174, 0.25755, 0.11665, 0.35515, 0.2968], [0.636, 0.42045, 0.29605, 0.235, 0.21745, 0.1907, 0.117, 0.08615, 0, 0.025025, 0.04258, 0.17545, 0.09005, 0.04607, 0.26905, 0.37195], [0.659, 0.4425, 0.3127, 0.23785, 0.2323, 0.20065, 0.4101, 0.1164, 0.025025, 0, 0.01811, 0.06955, 0.07895, 0.05795, 0.2528, 0.39555], [0.6725, 0.4552, 0.32075, 0.23565, 0.24115, 0.20395, 0.1545, 0.174, 0.04258, 0.01811, 0, 0.0638, 0.08115, 0.074, 0.2473, 0.41], [0.7235, 0.509, 0.38225, 0.2976, 0.3029, 0.2677, 0.20525, 0.17545, 0.0889, 0.06955, 0.0638, 0, 0.034785, 0.08605, 0.1838, 0.45885], [0.713, 0.502, 0.38565, 0.31615, 0.3074, 0.279, 0.19945, 0.25755, 0.09005, 0.07895, 0.08115, 0.034785, 0, 0.06915, 0.1806, 0.44795], [0.644, 0.43375, 0.32445, 0.279, 0.3221, 0.2299, 0.1328, 0.11665, 0.04607, 0.05795, 0.074, 0.08605, 0.06915, 0, 0.2476, 0.3788], [0.888, 0.681, 0.565, 0.4753, 0.48595, 0.4511, 0.34435, 0.35515, 0.26905, 0.2528, 0.2473, 0.1838, 0.1806, 0.2476, 0, 0.6235], [0.265, 0.07745, 0.18595, 0.35035, 0.2221, 0.28805, 0.25555, 0.2968, 0.37195, 0.39555, 0.41, 0.45885, 0.44795, 0.3788, 0.6235, 0]];\nexport const O = [[0, 0.01477, 0.0262866666666667, 0.0379666666666667, 0.03063, 0.0349333333333333, 0.0346, 0.0371666666666667, 0.0424, 0.0439333333333333, 0.0448333333333333, 0.0482333333333333, 0.0475333333333333, 0.0429333333333333, 0.05922, 0.0176666666666667], [0.01477, 0, 0.0118966666666667, 0.0236066666666667, 0.0158866666666667, 0.0202233333333333, 0.0202566666666667, 0.0226033333333333, 0.02803, 0.0295, 0.0303466666666667, 0.0339333333333333, 0.0334666666666667, 0.0289166666666667, 0.0454, 0.00516333333333333], [0.0262866666666667, 0.0118966666666667, 0, 0.01173, 0.00531, 0.00893, 0.0130866666666667, 0.0140133333333333, 0.0197366666666667, 0.0208466666666667, 0.0213833333333333, 0.0254833333333333, 0.02571, 0.02163, 0.0433333333333333, 0.0123966666666667], [0.0379666666666667, 0.0236066666666667, 0.01173, 0, 0.02523, 0.00499, 0.00995666666666667, 0.0118833333333333, 0.0156666666666667, 0.0158566666666667, 0.01571, 0.01984, 0.0210766666666667, 0.0186, 0.0316866666666667, 0.0233566666666667], [0.03063, 0.0158866666666667, 0.00531, 0.02523, 0, 0.0148066666666667, 0.00843666666666667, 0.00882333333333333, 0.0144966666666667, 0.0154866666666667, 0.0160766666666667, 0.0201933333333333, 0.0204933333333333, 0.0214733333333333, 0.0323966666666667, 0.0148066666666667], [0.0349333333333333, 0.0202233333333333, 0.00893, 0.00499, 0.0148066666666667, 0, 0.00907333333333333, 0.00782, 0.0127133333333333, 0.0133766666666667, 0.0135966666666667, 0.0178466666666667, 0.0186, 0.0153266666666667, 0.0300733333333333, 0.0192033333333333], [0.0346, 0.0202566666666667, 0.0130866666666667, 0.00995666666666667, 0.00843666666666667, 0.00907333333333333, 0, 0.003203, 0.0078, 0.02734, 0.0103, 0.0136833333333333, 0.0132966666666667, 0.00885333333333333, 0.0229566666666667, 0.0170366666666667], [0.0371666666666667, 0.0226033333333333, 0.0140133333333333, 0.0118833333333333, 0.00882333333333333, 0.00782, 0.003203, 0, 0.00574333333333333, 0.00776, 0.00425333333333333, 0.0116, 0.01717, 0.00777666666666667, 0.0236766666666667, 0.0197866666666667], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [0.0482333333333333, 0.0339333333333333, 0.0254833333333333, 0.01984, 0.0201933333333333, 0.0178466666666667, 0.0136833333333333, 0.0116966666666667, 0.00592666666666667, 0.0046366, 0.00425333333333333, 0, 0.002319, 0.00573666666666667, 0.0122533333333333, 0.03059], [0.0475333333333333, 0.0334666666666667, 0.02571, 0.0210766666666667, 0.0204933333333333, 0.0186, 0.0132966666666667, 0.01717, 0.00600333333333333, 0.00526333333333333, 0.00541, 0.002319, 0, 0.00461, 0.01204, 0.0298633333333333], [0.0429333333333333, 0.0289166666666667, 0.02163, 0.0186, 0.0214733333333333, 0.0153266666666667, 0.00885333333333333, 0.00777666666666667, 0.00307133333333333, 0.00386333333333333, 0.00493333333333333, 0.00573666666666667, 0.00461, 0, 0.0165066666666667, 0.0252533333333333], [0.0592, 0.0454, 0.0376666666666667, 0.0316866666666667, 0.0323966666666667, 0.0300733333333333, 0.0229566666666667, 0.0236766666666667, 0.0179366666666667, 0.0168533333333333, 0.0164866666666667, 0.0122533333333333, 0.01204, 0.0165066666666667, 0, 0.0415666666666667], [0.0176666666666667, 0.00516333333333333, 0.0123966666666667, 0.0233566666666667, 0.0148066666666667, 0.0192033333333333, 0.0170366666666667, 0.0197866666666667, 0.0247966666666667, 0.02637, 0.0273333333333333, 0.03059, 0.0298633333333333, 0.0252533333333333, 0.0415666666666667, 0]];\nexport const B = [[100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 0, 0.023653125, 0.004678125, 0.009334375, 0.011140625, 0.0146875, 0.014865625, 0.014728125, 0.0186, 0.019759375, 0.0174375, 0.02970625, 0.021896875], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 0.0186, 0.01893125, 0.01673125, 0.012828125, 0.010965625, 0.00555625, 0.004368, 0.0039875, 0, 0.0021740625, 0.005378125, 0.0114875, 0.028678125], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], [100, 100, 100, 0.021896875, 0.01388125, 0.018003125, 0.015971875, 0.01855, 0.023246875, 0.024721875, 0.025625, 0.028678125, 0.027996875, 0.023675, 0.03896875, 0]];\nexport const M = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\nexport const MI = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\nexport const Feromonios = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\n\nfor (var i = 0; i < P.length; i++) {\n  for (var h = 0; h < P.length; h++) {\n    M[i][h] = Math.min(P[i][h], B[i][h], O[i][h]);\n  }\n}\n\nfor (let i = 0; i < P.length; i++) {\n  for (let h = 0; h < P.length; h++) {\n    if (P[i][h] <= B[i][h] && P[i][h] <= O[i][h]) {\n      MI[i][h] = P[i][h] + \"P\";\n    }\n\n    if (B[i][h] < P[i][h] && B[i][h] <= O[i][h]) {\n      MI[i][h] = B[i][h] + \"B\";\n    }\n\n    if (O[i][h] < B[i][h] && O[i][h] < P[i][h]) {\n      MI[i][h] = O[i][h] + \"O\";\n    }\n  }\n} // partida = { latitude: 0, longitude: 1 } chegada = { latitude: 0, longitude: 1 }\n// function distancia(partida, chegada) {\n//   var dGrau = Math.sqrt(\n//     Math.pow(partida.longitude + partida.latitude, 2) +\n//       Math.pow(chegada.longitude - chegada.latitude, 2)\n//   );\n//   var d = (40030000 * dGrau) / 360;\n//   return d;\n// }\n\n\nfunction medirRota(partida, caminho) {\n  var tempo = 0;\n  var posAtual = partida,\n      proxPasso = caminho[0];\n  tempo += M[posAtual][proxPasso];\n\n  for (var i = 0; i < caminho.length - 1; i++) {\n    posAtual = proxPasso;\n    proxPasso = caminho[i + 1];\n    tempo += M[posAtual][proxPasso];\n  }\n\n  return tempo;\n}\n\nfunction atribuirFeromonio(tempo) {\n  return 1 - tempo;\n}\n\nfunction evaporarFeromonio() {\n  var maximoFeromonio = 0;\n  var mediaFeromonio = 0;\n  var taxaDeEvaporacao = 0.05;\n  var count = 0;\n\n  for (let i = 0; i < Feromonios.length; i++) {\n    for (let h = 0; h < Feromonios[0].length; h++) {\n      maximoFeromonio += Feromonios[i][h];\n      count++;\n    }\n  }\n\n  mediaFeromonio = maximoFeromonio / count;\n\n  for (let i = 0; i < Feromonios.length; i++) {\n    for (let h = 0; h < Feromonios[0].length; h++) {\n      Feromonios[i][h] -= mediaFeromonio * taxaDeEvaporacao;\n      if (Feromonios[i][h] < 0) Feromonios[i][h] = 0;\n    }\n  }\n}\n\nfunction escolherProximoPasso(posicaoAtual, caminho) {\n  var possibilidades = [];\n\n  for (let i = 0; i < M[posicaoAtual].length; i++) {\n    if (i === posicaoAtual || caminho.includes(i)) continue;\n\n    if (M[posicaoAtual][i] >= 0) {\n      possibilidades.push(i);\n    }\n  }\n\n  var chanceTotal = 0;\n  var chancePossibilidade = [];\n\n  for (let i = 0; i < possibilidades.length; i++) {\n    var feromonio = Feromonios[posicaoAtual][possibilidades[i]];\n    if (feromonio <= 0) feromonio = 1;\n    chancePossibilidade.push(chanceTotal + feromonio);\n    chanceTotal += feromonio;\n  }\n\n  var roleta = Math.random() * chanceTotal;\n  var escolhido = possibilidades[0];\n\n  for (let i = 0; i < possibilidades.length; i++) {\n    if (roleta < chancePossibilidade[i]) {\n      escolhido = possibilidades[i];\n      break;\n    }\n  }\n\n  return escolhido;\n} //indices dos pr�dios\n\n\nfunction colonia(partida, chegada) {\n  var melhorTempo = 1000000000;\n  var melhorCaminho = [];\n\n  for (var formiga = 0; formiga < 50; formiga++) {\n    var posicaoAtual = partida;\n    var caminho = [];\n\n    while (posicaoAtual !== chegada) {\n      var proximoPasso = escolherProximoPasso(posicaoAtual, caminho);\n      posicaoAtual = proximoPasso;\n      caminho.push(proximoPasso);\n    }\n\n    var tempo = medirRota(partida, caminho);\n\n    if (tempo < melhorTempo) {\n      melhorTempo = tempo;\n      melhorCaminho = caminho;\n    } // colocar feromonio\n\n\n    var posAtual = posicaoAtual,\n        proxPasso = caminho[0];\n    Feromonios[posAtual][proxPasso] += atribuirFeromonio(tempo);\n\n    for (var i = 0; i < caminho.length - 1; i++) {\n      posAtual = proxPasso;\n      proxPasso = caminho[i + 1];\n      Feromonios[posAtual][proxPasso] += atribuirFeromonio(tempo);\n    }\n\n    evaporarFeromonio();\n  }\n\n  console.log(\"Melhor tempo: \" + melhorTempo + \"\\nMelhor caminho: \" + melhorCaminho);\n  return {\n    melhorTempo,\n    melhorCaminho\n  };\n}\n\nconst Colônia = () => {\n  const [caminho, setCaminho] = useState([]);\n  const [tempo, setTempo] = useState(0);\n  const [show, setShow] = useState(false);\n  const [partida, setPartida] = useState(0);\n  const [destino, setDestino] = useState(0);\n\n  const handleChange = (A, B) => {\n    const rota = colonia(A, B);\n    console.log(A, B);\n    setCaminho(rota.melhorCaminho);\n    setTempo(rota.melhorTempo);\n    setShow(true);\n  };\n\n  console.log(caminho, tempo);\n  console.log(partida, destino);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1092,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => handleChange(partida, destino),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    size: 20 //   name={partida}\n    ,\n    onChange: e => setPartida(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    size: 20 //   name={destino}\n    ,\n    onChange: e => setDestino(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: e => {\n      e.preventDefault();\n      handleChange(partida, destino);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 9\n    }\n  }, \" \", \"Enviar\")), show ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1119,\n      columnNumber: 9\n    }\n  }, \"Caminho: \", caminho, \"Melhor tempo: \", tempo) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1124,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Colônia;","map":{"version":3,"sources":["/Users/karytha/Projetos/Karytha/IA/algoritmos/src/ColoniaDeFormigas/index.js"],"names":["React","useState","P","O","B","M","MI","Feromonios","i","length","h","Math","min","medirRota","partida","caminho","tempo","posAtual","proxPasso","atribuirFeromonio","evaporarFeromonio","maximoFeromonio","mediaFeromonio","taxaDeEvaporacao","count","escolherProximoPasso","posicaoAtual","possibilidades","includes","push","chanceTotal","chancePossibilidade","feromonio","roleta","random","escolhido","colonia","chegada","melhorTempo","melhorCaminho","formiga","proximoPasso","console","log","Colônia","setCaminho","setTempo","show","setShow","setPartida","destino","setDestino","handleChange","A","rota","e","target","value","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import { P, O, B, MI, M, Feromonios } from \"../Components/dados\";\nexport const P = [\n  [\n    0,\n    0.22155,\n\n    0.3943,\n\n    0.5695,\n\n    0.45945,\n\n    0.524,\n\n    0.519,\n\n    0.5575,\n\n    0.636,\n\n    0.659,\n\n    0.6725,\n\n    0.7235,\n\n    0.713,\n\n    0.644,\n\n    0.8883,\n\n    0.265,\n  ],\n  [\n    0.22155,\n    0,\n    0.17845,\n    0.3541,\n    0.2383,\n    0.30335,\n    0.30385,\n    0.33905,\n    0.42045,\n    0.4425,\n    0.4552,\n    0.509,\n    0.502,\n    0.43375,\n    0.681,\n    0.07745,\n  ],\n  [\n    0.3943,\n    0.17845,\n    0,\n    0.17595,\n    0.07965,\n    0.13395,\n    0.1963,\n    0.2102,\n    0.29605,\n    0.3127,\n    0.32075,\n    0.38225,\n    0.38565,\n    0.32445,\n    0.65,\n    0.18595,\n  ],\n  [\n    0.5695,\n    0.3541,\n    0.17595,\n    0,\n    0.37845,\n    0.07485,\n    0.14935,\n    0.17825,\n    0.235,\n    0.23785,\n    0.23565,\n    0.2976,\n    0.31615,\n    0.279,\n    0.4753,\n    0.35035,\n  ],\n  [\n    0.45945,\n    0.2383,\n    0.07965,\n    0.37845,\n    0,\n    0.2221,\n    0.12655,\n    0.13235,\n    0.21745,\n    0.2323,\n    0.24115,\n    0.3029,\n    0.3074,\n    0.3221,\n    0.48595,\n    0.2221,\n  ],\n  [\n    0.524,\n    0.30335,\n    0.13395,\n    0.07485,\n    0.2221,\n    0,\n    0.1361,\n    0.1173,\n    0.1907,\n    0.20065,\n    0.20395,\n    0.2677,\n    0.279,\n    0.2299,\n    0.4511,\n    0.28805,\n  ],\n  [\n    0.519,\n    0.30385,\n    0.1963,\n    0.14935,\n    0.12655,\n    0.1361,\n    0,\n    0.048045,\n    0.117,\n    0.4101,\n    0.1545,\n    0.20525,\n    0.19945,\n    0.1328,\n    0.34435,\n    0.25555,\n  ],\n  [\n    0.5575,\n    0.33905,\n    0.2102,\n    0.17825,\n    0.13235,\n    0.1173,\n    0.048045,\n    0,\n    0.08615,\n    0.1164,\n    0.0638,\n    0.174,\n    0.25755,\n    0.11665,\n    0.35515,\n    0.2968,\n  ],\n  [\n    0.636,\n    0.42045,\n    0.29605,\n    0.235,\n    0.21745,\n    0.1907,\n    0.117,\n    0.08615,\n    0,\n    0.025025,\n    0.04258,\n    0.17545,\n    0.09005,\n    0.04607,\n    0.26905,\n    0.37195,\n  ],\n  [\n    0.659,\n    0.4425,\n    0.3127,\n    0.23785,\n    0.2323,\n    0.20065,\n    0.4101,\n    0.1164,\n    0.025025,\n    0,\n    0.01811,\n    0.06955,\n    0.07895,\n    0.05795,\n    0.2528,\n    0.39555,\n  ],\n  [\n    0.6725,\n    0.4552,\n    0.32075,\n    0.23565,\n    0.24115,\n    0.20395,\n    0.1545,\n    0.174,\n    0.04258,\n    0.01811,\n    0,\n    0.0638,\n    0.08115,\n    0.074,\n    0.2473,\n    0.41,\n  ],\n  [\n    0.7235,\n    0.509,\n    0.38225,\n    0.2976,\n    0.3029,\n    0.2677,\n    0.20525,\n    0.17545,\n    0.0889,\n    0.06955,\n    0.0638,\n    0,\n    0.034785,\n    0.08605,\n    0.1838,\n    0.45885,\n  ],\n  [\n    0.713,\n    0.502,\n    0.38565,\n    0.31615,\n    0.3074,\n    0.279,\n    0.19945,\n    0.25755,\n    0.09005,\n    0.07895,\n    0.08115,\n    0.034785,\n    0,\n    0.06915,\n    0.1806,\n    0.44795,\n  ],\n  [\n    0.644,\n    0.43375,\n    0.32445,\n    0.279,\n    0.3221,\n    0.2299,\n    0.1328,\n    0.11665,\n    0.04607,\n    0.05795,\n    0.074,\n    0.08605,\n    0.06915,\n    0,\n    0.2476,\n    0.3788,\n  ],\n  [\n    0.888,\n    0.681,\n    0.565,\n    0.4753,\n    0.48595,\n    0.4511,\n    0.34435,\n    0.35515,\n    0.26905,\n    0.2528,\n    0.2473,\n    0.1838,\n    0.1806,\n    0.2476,\n    0,\n    0.6235,\n  ],\n  [\n    0.265,\n    0.07745,\n    0.18595,\n    0.35035,\n    0.2221,\n    0.28805,\n    0.25555,\n    0.2968,\n    0.37195,\n    0.39555,\n    0.41,\n    0.45885,\n    0.44795,\n    0.3788,\n    0.6235,\n    0,\n  ],\n];\n\nexport const O = [\n  [\n    0,\n    0.01477,\n    0.0262866666666667,\n    0.0379666666666667,\n    0.03063,\n    0.0349333333333333,\n    0.0346,\n    0.0371666666666667,\n    0.0424,\n    0.0439333333333333,\n    0.0448333333333333,\n    0.0482333333333333,\n    0.0475333333333333,\n    0.0429333333333333,\n    0.05922,\n    0.0176666666666667,\n  ],\n  [\n    0.01477,\n    0,\n    0.0118966666666667,\n    0.0236066666666667,\n    0.0158866666666667,\n    0.0202233333333333,\n    0.0202566666666667,\n    0.0226033333333333,\n    0.02803,\n    0.0295,\n    0.0303466666666667,\n    0.0339333333333333,\n    0.0334666666666667,\n    0.0289166666666667,\n    0.0454,\n    0.00516333333333333,\n  ],\n  [\n    0.0262866666666667,\n    0.0118966666666667,\n    0,\n    0.01173,\n    0.00531,\n    0.00893,\n    0.0130866666666667,\n    0.0140133333333333,\n    0.0197366666666667,\n    0.0208466666666667,\n    0.0213833333333333,\n    0.0254833333333333,\n    0.02571,\n    0.02163,\n    0.0433333333333333,\n    0.0123966666666667,\n  ],\n  [\n    0.0379666666666667,\n    0.0236066666666667,\n    0.01173,\n    0,\n    0.02523,\n    0.00499,\n    0.00995666666666667,\n    0.0118833333333333,\n    0.0156666666666667,\n    0.0158566666666667,\n    0.01571,\n    0.01984,\n    0.0210766666666667,\n    0.0186,\n    0.0316866666666667,\n    0.0233566666666667,\n  ],\n  [\n    0.03063,\n    0.0158866666666667,\n    0.00531,\n    0.02523,\n    0,\n    0.0148066666666667,\n    0.00843666666666667,\n    0.00882333333333333,\n    0.0144966666666667,\n    0.0154866666666667,\n    0.0160766666666667,\n    0.0201933333333333,\n    0.0204933333333333,\n    0.0214733333333333,\n    0.0323966666666667,\n    0.0148066666666667,\n  ],\n  [\n    0.0349333333333333,\n    0.0202233333333333,\n    0.00893,\n    0.00499,\n    0.0148066666666667,\n    0,\n    0.00907333333333333,\n    0.00782,\n    0.0127133333333333,\n    0.0133766666666667,\n    0.0135966666666667,\n    0.0178466666666667,\n    0.0186,\n    0.0153266666666667,\n    0.0300733333333333,\n    0.0192033333333333,\n  ],\n  [\n    0.0346,\n    0.0202566666666667,\n    0.0130866666666667,\n    0.00995666666666667,\n    0.00843666666666667,\n    0.00907333333333333,\n    0,\n    0.003203,\n    0.0078,\n    0.02734,\n    0.0103,\n    0.0136833333333333,\n    0.0132966666666667,\n    0.00885333333333333,\n    0.0229566666666667,\n    0.0170366666666667,\n  ],\n  [\n    0.0371666666666667,\n    0.0226033333333333,\n    0.0140133333333333,\n    0.0118833333333333,\n    0.00882333333333333,\n    0.00782,\n    0.003203,\n    0,\n    0.00574333333333333,\n    0.00776,\n    0.00425333333333333,\n    0.0116,\n    0.01717,\n    0.00777666666666667,\n    0.0236766666666667,\n    0.0197866666666667,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    0.0482333333333333,\n    0.0339333333333333,\n    0.0254833333333333,\n    0.01984,\n    0.0201933333333333,\n    0.0178466666666667,\n    0.0136833333333333,\n    0.0116966666666667,\n    0.00592666666666667,\n    0.0046366,\n    0.00425333333333333,\n    0,\n    0.002319,\n    0.00573666666666667,\n    0.0122533333333333,\n    0.03059,\n  ],\n  [\n    0.0475333333333333,\n    0.0334666666666667,\n    0.02571,\n    0.0210766666666667,\n    0.0204933333333333,\n    0.0186,\n    0.0132966666666667,\n    0.01717,\n    0.00600333333333333,\n    0.00526333333333333,\n    0.00541,\n    0.002319,\n    0,\n    0.00461,\n    0.01204,\n    0.0298633333333333,\n  ],\n  [\n    0.0429333333333333,\n    0.0289166666666667,\n    0.02163,\n    0.0186,\n    0.0214733333333333,\n    0.0153266666666667,\n    0.00885333333333333,\n    0.00777666666666667,\n    0.00307133333333333,\n    0.00386333333333333,\n    0.00493333333333333,\n    0.00573666666666667,\n    0.00461,\n    0,\n    0.0165066666666667,\n    0.0252533333333333,\n  ],\n  [\n    0.0592,\n    0.0454,\n    0.0376666666666667,\n    0.0316866666666667,\n    0.0323966666666667,\n    0.0300733333333333,\n    0.0229566666666667,\n    0.0236766666666667,\n    0.0179366666666667,\n    0.0168533333333333,\n    0.0164866666666667,\n    0.0122533333333333,\n    0.01204,\n    0.0165066666666667,\n    0,\n    0.0415666666666667,\n  ],\n  [\n    0.0176666666666667,\n    0.00516333333333333,\n    0.0123966666666667,\n    0.0233566666666667,\n    0.0148066666666667,\n    0.0192033333333333,\n    0.0170366666666667,\n    0.0197866666666667,\n    0.0247966666666667,\n    0.02637,\n    0.0273333333333333,\n    0.03059,\n    0.0298633333333333,\n    0.0252533333333333,\n    0.0415666666666667,\n    0,\n  ],\n];\nexport const B = [\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    0,\n    0.023653125,\n    0.004678125,\n    0.009334375,\n    0.011140625,\n    0.0146875,\n    0.014865625,\n    0.014728125,\n    0.0186,\n    0.019759375,\n    0.0174375,\n    0.02970625,\n    0.021896875,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    0.0186,\n    0.01893125,\n    0.01673125,\n    0.012828125,\n    0.010965625,\n    0.00555625,\n    0.004368,\n    0.0039875,\n    0,\n    0.0021740625,\n    0.005378125,\n    0.0114875,\n    0.028678125,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n    100,\n  ],\n  [\n    100,\n    100,\n    100,\n    0.021896875,\n    0.01388125,\n    0.018003125,\n    0.015971875,\n    0.01855,\n    0.023246875,\n    0.024721875,\n    0.025625,\n    0.028678125,\n    0.027996875,\n    0.023675,\n    0.03896875,\n    0,\n  ],\n];\n\nexport const M = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\nexport const MI = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\nexport const Feromonios = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\nfor (var i = 0; i < P.length; i++) {\n  for (var h = 0; h < P.length; h++) {\n    M[i][h] = Math.min(P[i][h], B[i][h], O[i][h]);\n  }\n}\n\nfor (let i = 0; i < P.length; i++) {\n  for (let h = 0; h < P.length; h++) {\n    if (P[i][h] <= B[i][h] && P[i][h] <= O[i][h]) {\n      MI[i][h] = P[i][h] + \"P\";\n    }\n    if (B[i][h] < P[i][h] && B[i][h] <= O[i][h]) {\n      MI[i][h] = B[i][h] + \"B\";\n    }\n    if (O[i][h] < B[i][h] && O[i][h] < P[i][h]) {\n      MI[i][h] = O[i][h] + \"O\";\n    }\n  }\n}\n\n// partida = { latitude: 0, longitude: 1 } chegada = { latitude: 0, longitude: 1 }\n// function distancia(partida, chegada) {\n//   var dGrau = Math.sqrt(\n//     Math.pow(partida.longitude + partida.latitude, 2) +\n//       Math.pow(chegada.longitude - chegada.latitude, 2)\n//   );\n//   var d = (40030000 * dGrau) / 360;\n//   return d;\n// }\n\nfunction medirRota(partida, caminho) {\n  var tempo = 0;\n  var posAtual = partida,\n    proxPasso = caminho[0];\n  tempo += M[posAtual][proxPasso];\n  for (var i = 0; i < caminho.length - 1; i++) {\n    posAtual = proxPasso;\n    proxPasso = caminho[i + 1];\n    tempo += M[posAtual][proxPasso];\n  }\n  return tempo;\n}\n\nfunction atribuirFeromonio(tempo) {\n  return 1 - tempo;\n}\n\nfunction evaporarFeromonio() {\n  var maximoFeromonio = 0;\n  var mediaFeromonio = 0;\n  var taxaDeEvaporacao = 0.05;\n  var count = 0;\n  for (let i = 0; i < Feromonios.length; i++) {\n    for (let h = 0; h < Feromonios[0].length; h++) {\n      maximoFeromonio += Feromonios[i][h];\n      count++;\n    }\n  }\n  mediaFeromonio = maximoFeromonio / count;\n  for (let i = 0; i < Feromonios.length; i++) {\n    for (let h = 0; h < Feromonios[0].length; h++) {\n      Feromonios[i][h] -= mediaFeromonio * taxaDeEvaporacao;\n      if (Feromonios[i][h] < 0) Feromonios[i][h] = 0;\n    }\n  }\n}\n\nfunction escolherProximoPasso(posicaoAtual, caminho) {\n  var possibilidades = [];\n  for (let i = 0; i < M[posicaoAtual].length; i++) {\n    if (i === posicaoAtual || caminho.includes(i)) continue;\n    if (M[posicaoAtual][i] >= 0) {\n      possibilidades.push(i);\n    }\n  }\n  var chanceTotal = 0;\n  var chancePossibilidade = [];\n  for (let i = 0; i < possibilidades.length; i++) {\n    var feromonio = Feromonios[posicaoAtual][possibilidades[i]];\n    if (feromonio <= 0) feromonio = 1;\n    chancePossibilidade.push(chanceTotal + feromonio);\n    chanceTotal += feromonio;\n  }\n  var roleta = Math.random() * chanceTotal;\n  var escolhido = possibilidades[0];\n  for (let i = 0; i < possibilidades.length; i++) {\n    if (roleta < chancePossibilidade[i]) {\n      escolhido = possibilidades[i];\n      break;\n    }\n  }\n  return escolhido;\n}\n\n//indices dos pr�dios\nfunction colonia(partida, chegada) {\n  var melhorTempo = 1000000000;\n  var melhorCaminho = [];\n  for (var formiga = 0; formiga < 50; formiga++) {\n    var posicaoAtual = partida;\n    var caminho = [];\n    while (posicaoAtual !== chegada) {\n      var proximoPasso = escolherProximoPasso(posicaoAtual, caminho);\n      posicaoAtual = proximoPasso;\n      caminho.push(proximoPasso);\n    }\n    var tempo = medirRota(partida, caminho);\n    if (tempo < melhorTempo) {\n      melhorTempo = tempo;\n      melhorCaminho = caminho;\n    }\n    // colocar feromonio\n    var posAtual = posicaoAtual,\n      proxPasso = caminho[0];\n    Feromonios[posAtual][proxPasso] += atribuirFeromonio(tempo);\n    for (var i = 0; i < caminho.length - 1; i++) {\n      posAtual = proxPasso;\n      proxPasso = caminho[i + 1];\n      Feromonios[posAtual][proxPasso] += atribuirFeromonio(tempo);\n    }\n    evaporarFeromonio();\n  }\n  console.log(\n    \"Melhor tempo: \" + melhorTempo + \"\\nMelhor caminho: \" + melhorCaminho\n  );\n  return { melhorTempo, melhorCaminho };\n}\n\nconst Colônia = () => {\n  const [caminho, setCaminho] = useState([]);\n  const [tempo, setTempo] = useState(0);\n  const [show, setShow] = useState(false);\n  const [partida, setPartida] = useState(0);\n  const [destino, setDestino] = useState(0);\n\n  const handleChange = (A, B) => {\n    const rota = colonia(A, B);\n\n    console.log(A, B);\n    setCaminho(rota.melhorCaminho);\n    setTempo(rota.melhorTempo);\n    setShow(true);\n  };\n  console.log(caminho, tempo);\n  console.log(partida, destino);\n  return (\n    <div>\n      <form onSubmit={() => handleChange(partida, destino)}>\n        <input\n          type=\"text\"\n          size={20}\n          //   name={partida}\n          onChange={(e) => setPartida(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          size={20}\n          //   name={destino}\n          onChange={(e) => setDestino(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            handleChange(partida, destino);\n          }}\n        >\n          {\" \"}\n          Enviar\n        </button>\n      </form>\n\n      {show ? (\n        <div>\n          Caminho: {caminho}\n          Melhor tempo: {tempo}\n        </div>\n      ) : (\n        <div />\n      )}\n    </div>\n  );\n};\n\nexport default Colônia;\n"]},"metadata":{},"sourceType":"module"}